Puppet module: tools-adm

DESCRIPTION:
------------

This module installs and manages development libraries.


MODULE'S SPECIFIC USER VARIABLES:
---------------------------------

USAGE:

# Standard Classes
include tools-adm              # Install and run tools-adm
include tools-adm::absent      # Remove tools-adm package.
include tools-adm::debug       # Used for debugging purposes (not resource hungry)
                         # Automatically included if $debug=yes
                         # Requires Example42's puppet::params and puppet::debug

# Extended Classes

# Module specific classes

# Module specific defines


Module GENERAL VARIABLES:
-------------------------

Modules collection uses some general variables that can influence the
behaviour of this module. You can happily live without considering or setting
them, but they can be useful to get many useful features out of the box.

$my_project
    If set, permits you to alter and customize the module behaviour and
    files's deploy logic in custom project classes The custom class
    tools-adm::$my_module autoloads from MODULEPATH/tools-adm/manifests/$my_project.pp but
    you can place it in a separated module by explicitely importing it:
    "import $my_project" to have something like
    MODULEPATH/$my_project/manifests/tools-adm.pp

$base_source
    Lets you define an alternative source for static files:
    - not set: Files are looked in puppet://$servername/ (the PuppetMaster)
    - set    : Files are in $base_source ( Ex: $base_source = "puppet://myfileserver" )

    Note that the module automatically manages the different paths for Puppet pre 0.25

$debug
    If set to yes writes in /var/lib/puppet/debug/ useful debugging info

VARIABLES FOR EXTENDED MODULES:
-------------------------------


DEPENDENCIES:
-------------


OPERATING SYSTEMS SUPPORT
-------------------------
RedHat/Centos/Scientific 5 : Yes
RedHat/Centos/Scientific 6 : Not tested.


